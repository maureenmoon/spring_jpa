package com.study.spring.postsComment;


import com.study.spring.posts.EPosts;
import com.study.spring.posts.PostsRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@RequiredArgsConstructor
public class PostsCommentService {

    private final PostsCommentRepository postsCommentRepository;
    private final PostsRepository postsRepository;

    @Transactional
    public Long createComment(Long postId, DPostsComment.Request dto) {
        EPosts post = postsRepository.findById(postId)
                .orElseThrow(() -> new IllegalArgumentException("Post not found"));
        EPostsComment comment = dto.toEntity(post);
        return postsCommentRepository.save(comment).getId();
    }

    public List<DPostsComment.Response> getCommentsByPost(Long postId) {
        EPosts post = postsRepository.findById(postId)
                .orElseThrow(() -> new IllegalArgumentException("Post not found"));
        return post.getPostscomments().stream()
                .map(DPostsComment.Response::new)
                .toList();
    }

    @Transactional
    public void deleteComment(Long id) {
        commentRepository.deleteById(id);
    }
}
